<?phpclass CartController extends Base_Controller_Api{	public  function addAction()	{				$arg[ 'ticket_id' ] = null == ( $this->body[ 'ticket_id' ] )? Lang_Msg::error( 'ERROR_ORDER_4' ): intval( $this->body[ 'ticket_id' ] );		$arg[ 'ticket_name' ] = null == ( $this->body[ 'ticket_name' ] )? Lang_Msg::error( 'ERROR_ORDER_1' ):  $this->body[ 'ticket_name' ] ;		$list= null == ( $this->body[ 'list' ] )? Lang_Msg::error( 'ERROR_OWNER_2' ):  $this->body[ 'list' ] ;		$arg[ 'date' ]	=  null == ( $this->body[ 'date' ] )? Lang_Msg::error( 'ERROR_ORDER_5' ): intval( $this->body[ 'date' ] );		//$arg[ 'payment' ] =  null == ( $this->body[ 'payment' ] )? Lang_Msg::error( 'ERROR_ORDER_6' ):  $this->body[ 'payment' ] ;		$arg[ 'price_type' ]	= null == ( $this->body[ 'price_type' ] )? Lang_Msg::error( 'ERROR_ORDER_7' ):  $this->body[ 'price_type' ] ;		$arg[ 'price' ] =	null == ( $this->body[ 'price' ] )? Lang_Msg::error( 'ERROR_ORDER_8' ):  $this->body[ 'price' ] ;		//$arg[ 'num' ]	= null == ( $this->body[ 'price' ] )? Lang_Msg::error( 'ERROR_ORDER_9' ):  $this->body[ 'num' ] ;		$arg[ 'type' ]  =0;		if( $this->body[ 'type' ] ) $arg[ 'type' ] = intval( $this->body[ 'type' ] );		$arg[ 'user_id' ] = null == ( $this->body[ 'user_id' ] )? Lang_Msg::error( 'ERROR_ORDER_12' ):  $this->body[ 'user_id' ] ;		$lists = json_decode( $list,TRUE );		$data = array();		$i =0;		// print_r(  json_encode( array(  array('name' => 'names', 'phone' => '150000000000', 'ard' =>'e324dafasdfadsf'))));		foreach( $lists as $key => $value )		{				$data[ $i ][ 'price' ] = $arg[ 'price' ];			$data[ $i ][ 'ticket_id' ] = $arg[ 'ticket_id' ];			$data[ $i ][ 'ticket_name' ] = $arg[ 'ticket_name' ];			$data[ $i ][ 'date' ]		 =  is_numeric( $arg[ 'date' ] )?  $arg[ 'date' ] : strtotime( $arg[ 'date'] );			//$data[ $i ][ 'payment' ] = $arg[ 'payment' ];			$data[ $i ][ 'price_type' ] = $arg[ 'price_type' ];			$data[ $i ][ 'num' ] = $value[ 'num' ];			$data[ $i ][ 'name' ] = $value[ 'name'] ;			$data[ $i ][ 'user_id' ] = $arg[ 'user_id' ];			$data[ $i ][ 'phone' ] = $value[ 'phone'];			$data[ $i ][ 'remark' ] ='';			$data[ $i ][ 'type' ] = $arg[ 'type' ];			if( isset( $this->body[ 'remark' ])) $data[ $i ][ 'remark'] = $this->body[ 'remark' ];			if( isset( $value[ 'card'] )) $data[ $i ][ 'card'] = $value[ 'card'];			$i++;		}		//提交		try {						CartModel::model()->begin();			foreach( $data as $key => $value )			{					$return = CartModel::model()->insert( $value );			}			CartModel::model()->commit();			Tools::lsJson('true','添加成功');				}		catch ( PDOException $err )    	{    		CartModel::model()->rollback();    		Tools::lsJson( '0', '添加失败');    	}	}		public  function deleteAction()	{			$id =  null == ( $this->body[ 'ids' ] ) ? Tools::lsJson( '0', '没有IDS参数'):  $this->body[ 'ids' ] ;		$ids = explode( ',', $id );		try 		{			CartModel::model()->begin();			foreach ( $ids as $d )			{					CartModel::model()->deleteById( $d );			}			CartModel::model()->commit();			Tools::lsJson('true','成功删除');		}		catch ( PDOException $err )    	{    		CartModel::model()->rollback();    		Tools::lsJson( '0', '删除失败');    	}	}		public function listsAction()	{		$arg[ 'user_id' ] = null == ( $this->body[ 'user_id' ] )? Lang_Msg::error( 'ERROR_ORDER_12' ): intval( $this->body[ 'user_id' ] );		$return = CartModel::model()->getList( $arg );		foreach( $return as $key => $value )		{			$return[ $key ][ 'date' ] = date( 'Y-m-d', $value[ 'date'] );		}		Lang_Msg::output( $return );	}		public  function updateAction()	{		$update = array();		$id = null == ( $this->body[ 'id' ] )? Lang_Msg::error( 'ERROR_ORDER_13' ): intval( $this->body[ 'id' ] );		if( isset( $this->body[ 'name' ] ) )$update[ 'name' ] = $this->body[ 'name' ];		if( isset( $this->body[ 'phone' ] ) )$update[ 'phone' ] = $this->body[ 'phone' ]; 		if( isset( $this->body[ 'date' ] ) )$update[ 'name' ] = $this->body[ 'name' ]; 		if( isset( $this->body[ 'num' ] ) )$update[ 'num' ] = $this->body[ 'num' ]; 		$count = CartModel::model()->countResult( array( 'id' => $id) );		if( $count >0 )		{			$return = CartModel::model()->update( $update,array( 'id' => $id ));			if( $return )			{				//Lang_Msg::output( Lang_Msg::error( 'ERROR_ORDER_10'));				Tools::lsJson( '1', '更新成功');			}			else			{				//Lang_Msg::error( 'ERROR_ORDER_11');				Tools::lsJson( '0', '更新失败');			}		}		else 		{			Tools::lsJson( '0', '更新失败,数据库中没有ID='.$id);		}	}		public  function detailAction()	{   		$id = null == ( $this->body[ 'id' ] )? Lang_Msg::error( 'ERROR_ORDER_13' ): intval( $this->body[ 'id' ] );		$return = CartModel::model()->get( array( 'id' => $id ) );		$return[ 'date' ] = date( 'Y-m-d H:i:s', $return[ 'date'] );		Lang_Msg::output( $return );	}}